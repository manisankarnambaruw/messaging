{"version":3,"file":"src_main_webapp_src_pages_Rooms_js.bundle.js","mappings":"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","sources":["webpack://messaging/./src/main/webapp/src/pages/Rooms.js"],"sourcesContent":["import { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, Form, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst ADD_ROOM = gql`\r\n  mutation createRoom($roomName: String!, $roomDesc: String) {\r\n    createRoom(roomName: $roomName, roomDesc: $roomDesc) {\r\n      id\r\n      roomName\r\n      roomDesc\r\n    }\r\n  }\r\n`;\r\n\r\nconst QUERY_ROOMS = gql`\r\n  query {\r\n    rooms {\r\n      id\r\n      roomName\r\n      roomDesc\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Rooms() {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [roomDesc, setRoomDesc] = useState(\"\");\r\n  const [addRoom, { data: roomData }] = useMutation(ADD_ROOM);\r\n  const { data, refetch } = useQuery(QUERY_ROOMS);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!!roomData) {\r\n      refetch();\r\n    }\r\n  }, [roomData]);\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"30px\" }}>\r\n      <Segment>\r\n        <Form\r\n          onSubmit={() => {\r\n            if (\r\n              !!roomName &&\r\n              !data?.rooms?.find((r) => r.roomName === roomName)\r\n            ) {\r\n              addRoom({ variables: { roomName, roomDesc } });\r\n            }\r\n          }}\r\n        >\r\n          <Form.Group>\r\n            <Form.Input\r\n              placeholder=\"Room Name\"\r\n              value={roomName}\r\n              onChange={({ target: { value } }) => setRoomName(value)}\r\n              width={5}\r\n            />\r\n            <Form.Input\r\n              placeholder=\"Room Description\"\r\n              value={roomDesc}\r\n              onChange={({ target: { value } }) => setRoomDesc(value)}\r\n              width={5}\r\n            />\r\n            <Form.Button type=\"submit\">\r\n              <Icon name=\"add\" /> Add\r\n            </Form.Button>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        {data?.rooms?.map((r) => (\r\n          <Segment\r\n            inverted\r\n            key={`room-${r.id}`}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigate(`/app/${r.id}`)}\r\n          >\r\n            <Header>{r.roomName}</Header>\r\n            <p>{r.roomDesc}</p>\r\n          </Segment>\r\n        ))}\r\n      </Segment>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["gql","useMutation","useQuery","React","useEffect","useState","useNavigate","Container","Form","Header","Icon","Segment","ADD_ROOM","_templateObject","_taggedTemplateLiteral","QUERY_ROOMS","_templateObject2","Rooms","_data$rooms2","_useState","_useState2","_slicedToArray","roomName","setRoomName","_useState3","_useState4","roomDesc","setRoomDesc","_useMutation","_useMutation2","addRoom","roomData","data","_useQuery","refetch","navigate","createElement","style","paddingTop","onSubmit","_data$rooms","rooms","find","r","variables","Group","Input","placeholder","value","onChange","_ref","target","width","_ref2","Button","type","name","map","inverted","key","concat","id","cursor","onClick"],"sourceRoot":""}