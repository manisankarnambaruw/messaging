{"version":3,"file":"src_main_webapp_src_pages_Room_js.bundle.js","mappings":"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","sources":["webpack://messaging/./src/main/webapp/src/pages/Room.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Container, Form, Header, Segment } from \"semantic-ui-react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Stomp } from \"@stomp/stompjs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { localStorageKey } from \"../constants\";\r\n\r\nexport default function Room() {\r\n  const [messages, setMessages] = useState([]);\r\n  const { id } = useParams();\r\n  const [stpClient, setStpClient] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  const handleSendMessage = useCallback(\r\n    (message) => {\r\n      stpClient.send(\r\n        \"/app/chat/\" + id,\r\n        {},\r\n        JSON.stringify({\r\n          from: localStorage.getItem(localStorageKey),\r\n          content: message,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    },\r\n    [stpClient]\r\n  );\r\n  useEffect(() => {\r\n    const socket = new SockJS(\"/chat\");\r\n    const stompClient = Stomp.over(socket);\r\n\r\n    stompClient.connect({}, function (frame) {\r\n      setConnected(true);\r\n      console.log(\"Connected: \" + frame);\r\n      stompClient.subscribe(\"/topic/messages/\" + id, function (messageOutput) {\r\n        setMessages((m) => [\r\n          ...m,\r\n          JSON.parse(new TextDecoder().decode(messageOutput._binaryBody)),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    setStpClient(stompClient);\r\n    return () => stompClient.disconnect();\r\n  }, []);\r\n  return (\r\n    <Container\r\n      style={{ paddingTop: \"20px\", paddingBottom: \"20px\", height: \"100vh\" }}\r\n    >\r\n      <Segment attached=\"bottom\" style={{ height: \"100%\" }}>\r\n        <Header attached=\"top\">\r\n          {connected ? \"Connected\" : \"Disconnected\"}\r\n        </Header>\r\n        <Segment attached=\"bottom\" style={{ height: \"80%\", overflowY: \"auto\" }}>\r\n          {messages.map((m, index) => (\r\n            <p key={`messages-${index}`}>\r\n              {m.from}: {m.content}\r\n            </p>\r\n          ))}\r\n        </Segment>\r\n        <Form onSubmit={() => {}} style={{ justifySelf: \"flex-end\" }}>\r\n          <Form.Group>\r\n            <Form.Input\r\n              value={message}\r\n              onChange={({ target: { value } }) => setMessage(value)}\r\n            />\r\n            <Form.Button\r\n              type=\"submit\"\r\n              onClick={() => handleSendMessage(message)}\r\n            >\r\n              Submit\r\n            </Form.Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["React","useCallback","useEffect","useState","Container","Form","Header","Segment","SockJS","Stomp","useParams","localStorageKey","Room","_useState","_useState2","_slicedToArray","messages","setMessages","_useParams","id","_useState3","_useState4","stpClient","setStpClient","_useState5","_useState6","message","setMessage","_useState7","_useState8","connected","setConnected","handleSendMessage","send","JSON","stringify","from","localStorage","getItem","content","socket","stompClient","over","connect","frame","console","log","subscribe","messageOutput","m","concat","_toConsumableArray","parse","TextDecoder","decode","_binaryBody","disconnect","createElement","style","paddingTop","paddingBottom","height","attached","overflowY","map","index","key","onSubmit","justifySelf","Group","Input","value","onChange","_ref","target","Button","type","onClick"],"sourceRoot":""}